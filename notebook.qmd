---
title: "Using ozonesondes to observe the Antarctic ozone hole"
subtitle: "A reproducible data analysis project"
author: "Jackson Vanfleet-Brown"
date: last-modified
format: html
echo: false
editor_options: 
  chunk_output_type: inline
---

## Background

The **ozone layer** is a vital component of our atmosphere shielding the surface of our planet from harmful UV radiation.

A seasonal **ozone hole** forms over Antarctica during the austral spring. The phenomenon is induced by pollutants circulating in our atmosphere in combination with the extremely cold temperatures in the polar region[^1]. Though the hole diminishes and eventually closes each year, it is nonetheless a global environmental and public health concern.

[^1]: The cold temperatures help to form Polar Stratospheric Clouds which facilitate the chemical reaction that destroys ozone. See Tritscher et al. (2021).

Amundsen-Scott South Pole Station, Antarctica is research station well positioned to observe the development of the ozone hole from year to year. From this site, instruments called **ozonesondes** are regulary sent into the atmosphere to perform measurements of ozone concentrations from ground level up to altitudes of 40 km or more.

### Ozonesondes -- How they work

The components of this instrument consist of:

1)  ðŸŽˆ **Meteorological balloon** This carries the instrument to high altitudes, before bursting and dropping the it.

2)  ðŸ”‹ **Electrochemical cell ozonesonde** The instrument itself uses a small air pump to bubble air into an electrochemical cell. The ozone in the air reacts with the cathode to produce electrical current proportional to the concentration of ozone in the air

3)  ðŸ“¡ **Radiosonde** This transmits ozone measurements back to a receiver station in addition to ancillary data such as temperature, humidity, and pressure.[^2]

ðŸ“ˆ This produces a a detailed profile of ozone concentrations it ascends and descends through the atmosphere.

[^2]: This is crucial because it is impossible to recover the ozonesonde after it's been launched

## Data Source

The complete record of ozonesonde profiles from South Pole Station, Antarctica is published by the NOAA Global Monitoring Laboratory and can be accessed, as of this writing, using the [GML Data Finder](https://gml.noaa.gov/dv/data/).

::: {.callout-note}
## Data Query

Structure your query as follows to access data for this project from the GML Data Finder:

- Category: Ozone
- Parameter: Ozone
- Type: Balloon
- Frequency: Vertical Profile
- Site: SPO

The data will be returned as `.l100` files which provide observations in intervals of 100 m.
:::

## Project Objective

For this project I will be using the 100-m ozonesonde profiles from South Pole to try to recreate @fig-ozmix2022, depicting a cross-section in time of the ozone layer over the south pole.

![Figure to recreate](ozmix2022.png){#fig-ozmix2022 width="70%"}

### Nearest neighbors to perform estimates

Since the ozonesonde launches occur sporadically through time @fig-launches-thru-time, to recreate the figure I will use nearest neighbors to estimate the values across days that lack an ozonesonde launch.

Why nearest neighbors? In my estimation this seems like a logical application for this type of an algorithm. The launches are performed with some regularity through time, and for the purposes of visualization, it is good enough to estimate based on the launches that were closest in time.

Specific methodology will be discovered in the functions.R script drawing you attention to these methodologies in particular: - do_model - process_data

Everything is composed into the project pipeline in the \_targets.R so you can inspect how the steps were performed and in what order.

### To reproduce the analysis:

Use the targets package to build a pipeline from data to finished images. The data is accessible from here and you can download the whole directory.

From there, you will need R and R Studio installed on your machine.

You then should clone this repo and open the .Rproj associated with the project. Renv is a package management that should prompt you to install the required packages automatically. Once that is done, you can simply run this command in the console: tar_make()

-   Note: Expect this pipeline to take several hours (\~3 on my machine) to execute as it will fit the model and use it to make the predictions.

This will generate all the processed data and results. If you want to re-render the figures in this notebook, you will need to also have Quarto installed. Then from the command line you would run "quarto render".

## Interesting Links

Read more about the fascinating science behind the formation of the ozone hole [here.](https://gml.noaa.gov/dv/spo_oz/)

Read more about the pollutants that cause the ozone hole -- and the global effort to reduce them in order to reverse the destruction of the ozone layer -- [here.](https://gml.noaa.gov/hats/about/cfc.html)

For detailed instructions on how to prepare and launch an ozonesonde, [check out the manual and videos given by Patrick Cullis.](https://patrickcullis.com/ozonesonde-instructions.html)

## Acknowledgements

```{r message=FALSE}
library(tidyverse)

targets::tar_load(results)
```

Steps for making the figure:

1)  Define the grid that will be used to depict the contour plot

-   I will choose to plot values based on interval of 10 days since that would complement the less active months better
-   I will plot at altitudes every 1 km between 12 - 24 km which is the region which experiences the majority of ozone depletion during the formation of the hole.
-   I will facet the plots by year, a la NOAA GML OZWV.

2)  Prepare training data

-   First I will prepare the training set from the sonde data, masking the data based on the altitudes and years required above.

3)  Fit model

-   Next I will fit a KNN regression model to the training set using default hyperparameters
-   Then I will use it to make predictions for the grid established above.

```{r results="hide"}

# 
# plotter <- function(df, id){
#   
#   title <- paste("Neighbors:", str_extract(id, "(?<=_)\\d+"))
#   ggplot(df) +
#     geom_tile(aes(x=jdate, y = alt, fill = ozone_ppmv))+
#     ggtitle(title)+
#     facet_wrap(~year)
# }
# 
# images %>%
#   nest(data = -id) %>%
#   mutate(plots = map2(data, id, ~plotter(.x, .y))) %>%
#   pull(plots)


```
